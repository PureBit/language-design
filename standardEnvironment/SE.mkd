Standard Environment
====================

This set is present in all implemented sets. It defines types and functions. All
types are elements of the Type set, and all functions are elements of the
Function set.

A module is a set that allows for all terms (including syntax sugar and derived
forms) and that imports the standard environment.

```
  SE :=
    { Type :=
      { Unit := ( (), ( Unit ) )
      , *    := /\ t . A ( x <- t ) ( x <- Unit )
      , ->   := /\ a . /\ b . ( (p,q) : A (p <- a) (A (q <- b) (p <- Type & q <- type)))
      , Fn   := /\ f . /\ a . /\ b . a <- Type & b <- Type & f < (a -> b)
      }
    , Function := /\ f . /\ a . /\ b . \ x . ( \ { e } . e ) { z : Fn f a b
                                                                 & x <- a
                                                                 & (y,z) <- f
                                                                 & x = y
                                                             }
    }
```
