Predicate Derived Forms
=======================

Basic Syntax
------------

```
  P ::=                                        predicates:
    False                                      truth value
    True                                       truth value
    ~P                                         negation
    P & P                                      conjunction
    P | P                                      disjunction
    t = t                                      equality
```

Complex Syntax
--------------

```
  P ::=                                        predicates:
    e <- S                                     membership
    P => P                                     conditional
    P <=> P                                    biconditional
    S1 < S2                                    S1 is a subset of S2
    S1 > S2                                    S2 is a subset of S1
```

Derivations
-----------

Membership:

```
  (<-) := \ x . /\ s . ~( s.x = {} )
```

Conditional:

```
  (=>) := \ p . \ q . p <- P & q <- P & ~( p & ~q )
```

Biconditional:

```
  (<=>) := \ p . \ q . p <- P & q <- P & p => q & q => p
```

Subset:

```
  (<) := /\ a . /\ b . ~( { x | A x ( E y ( x <- a
                                          & y <- b
                                          & x = y
                                          ) )
                          } = {} )
                      | ( a = {} )
```

```
  (>) := /\ a . /\ b . ~( { x | A y ( E x ( x <- a
                                          & y <- b
                                          & x = y
                                          ) )
                          } = {} )
                      | ( a = {} )
```
