Sets Derived Forms
==================

Basic Syntax
------------

```
  S ::=                                        sets:
    {}                                         empty set
    { s }                                      set
    { x | P }                                  class
    S.e                                        selection
```

Complex Syntax
--------------

```
  S ::=                                        sets:
    S1 < S2                                    S1 is a subset of S2
    S1 > S2                                    S2 is a subset of S1
    S + S                                      union
    S ^ S                                      intersection
    S - S                                      complement
    S * S                                      product
```

Derivations
-----------

Subset:

```
  (<) := /\ a . /\ b . ~( { x | A x ( E y ( x <- a
                                          & y <- b
                                          & x = y
                                          ) )
                          } = {} )
                      | ( a = {} )
```

```
  (>) := /\ a . /\ b . ~( { x | A y ( E x ( x <- a
                                          & y <- b
                                          & x = y
                                          ) )
                          } = {} )
                      | ( a = {} )
```

```
  (+) := /\ a . /\ b . { x | A x ( x <- a | x <- b ) }
```

```
  (^) := /\ a . /\ b . { x | A x ( ( x <- a | x <- b )
                                 & ~( x <- a & ~( x <- b))
                                 & ~( x <- b & ~( x <- a))) }
```

```
  (-) := /\ a . /\ b . { x | A x ( x <- a & ~( x <- b ) ) }
```

```
  (*) := /\ a . /\ b . { (x,y) | A x ( A y ( x <- a & y <- b ) ) }
```
