Notes
=====

* Benefits of System PB:
  * First-class modules.

  * Decidable type checking.

  * A lot of type-inference.

  * To get low-level types, just add `area` and `nat` kinds.

  * Liquid types are ~~probably~~ not necessary, as I can do dependent type
    style static bounds checking with `nat` constructors. That should
    simplify the type system considerably.

  * Data declarations are not expressions. Records are because of first-class
    modules, which makes the system more complicated as a result.

    In fact, it might be better to ditch first-class modules in favor of
    second-class mixin modules, and have a simpler system as a result.
