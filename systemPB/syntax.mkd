System PB Syntax
================

```
  Term ::=
    Object
    Lambda

  Object :=
    x                                          variable
    x := Term                                  label
    Set

  Lambda ::=
    \ x . Term                                 abstraction
    \ x . { x }                                set introduction
    \ { x } . x                                set elimination
    Lambda Term                                application

  Set ::=
    {}                                         empty set
    { Elements }                               set
    { Object : Predicate }                     class
    { Elements }.Object                        selection

  Elements ::=
    Object
    Object, Elements                           set of elements

  Predicate ::=                                predicates:
    False                                      truth value
    True                                       truth value
    ~Predicate                                 negation
    Predicate & Predicate                      conjunction
    Predicate | Predicate                      disjunction
    Term = Term                                equality
    Object <- Set                              membership
    E ( Object <- Set ) Predicate              existential quantifier
```
